================================================================================
=  SKIP version 1.8.7                              http://www.openskip.org/    =
================================================================================

SKIPのダウンロードありがとうございます。
SKIPは、コミュニケーションをベースにした情報共有を実現するアプリケーションです。
オープンソースとして、"GPL ver.3"を採用しています。

このREADME.txtでは、SKIPを稼動させるまでの必要最低限の手順を記載しています。
この手順に従い稼動させた環境は、あくまで試用を目的としたものになります。

SKIPの利用方法については、以下のアドレスより参照ください。
  SKIPポータルサイト = http://help.skipaas.jp/

ユーザのみなさんと編集するWikiはこちらです！
  http://wiki.github.com/openskip/skip/

以下のドキュメントよりもWikiの内容が適切な場合もあります。
よりよいドキュメントにするために是非ご協力お願いします。

================================================================================
* SKIP 動作環境
================================================================================
SKIPを動かすにあたり以下の環境で検証を行っています。
（動作を保証するものではありません。また、下記環境以外でも動作する可能性はあります）

 - OS    : Linux (kernel 2.6系)
 - DB    : MySQL 5.0系
 - Ruby  : 1.8.6, 1.8.7
 - Rails : 2.3.5


================================================================================
* SKIP バージョンアップ（version 1.8.6 -> version 1.8.7）
================================================================================
下記内容に従い旧バージョンから新バージョンにバージョンアップすることで、
SKIPを動かすことができます。

1. 設定ファイルの準備・編集（initial_settings.yml, database.yml, common_menus.yml）
--------------------------------------------------------------------------------
    $ cp config/initial_settings.yml.sample config/initial_settings.yml
    $ cp config/database.yml.sample config/database.yml
    $ cp config/common_menus.yml.sample config/common_menus.yml
  （config/initial_settings.yml, config/database.yml, config/common_menus.ymlを適切に編集してください）

2. キャッシュファイルの削除）
--------------------------------------------------------------------------------
    $ rm public/javascripts/jquery.all.js
    $ rm public/javascripts/skip_embedded.js
    $ rm public/stylesheets/skip.style.css

3. gemsのインストール
--------------------------------------------------------------------------------
    $ gem install bundler -v1.0.13 --no-rdoc --no-ri
    $ bundle install --deployment --without development test cucumber


================================================================================
* SKIP セットアップ（新規構築）
================================================================================
下記内容に従いセットアップすることで、SKIPを動かすことができます。
前提条件は以下のようになります。

 - Ruby(1.8.6 or 1.8.7), RubyGems(1.3.5以上), MySQL(5.0系)がインストール済み。
 - 公式ページもしくはgithubから最新版SKIPをダウンロード済み。

1. gemsのインストール
--------------------------------------------------------------------------------
    $ gem install bundler -v1.0.13 --no-rdoc --no-ri
    $ bundle install --deployment --without development test cucumber

2. SKIPのファイル解凍（tarファイルをダウンロードした場合のみ）
--------------------------------------------------------------------------------
    $ tar xvzf openskip-skip-xxxxxxx.tar.gz

3. 設定ファイルの準備・編集（initial_settings.yml, database.yml, common_menus.yml）
--------------------------------------------------------------------------------
    $ cp config/initial_settings.yml.sample config/initial_settings.yml
    $ cp config/database.yml.sample config/database.yml
    $ cp config/common_menus.yml.sample config/common_menus.yml
  （config/initial_settings.yml, config/database.yml, config/common_menus.ymlを適切に編集してください）

4. データベースの作成（mysqlが起動済みであること）
--------------------------------------------------------------------------------
    $ RAILS_ENV=production bundle exec rake db:create
    $ RAILS_ENV=production bundle exec rake db:migrate

5. 初期データの登録
--------------------------------------------------------------------------------
    $ RAILS_ENV=production bundle exec rake skip:load_default_data

6. 初期管理者ユーザ登録URLの生成
--------------------------------------------------------------------------------
    $ RAILS_ENV=production ruby lib/create_new_admin_url.rb --code

7. ar_sendmailの起動（メール機能を利用する場合のみ必要）
--------------------------------------------------------------------------------
    $ RAILS_ENV=production ar_sendmail -d

    ar_sendmailの設定など、詳細については以下のリンク先を参考にしてください。
    http://github.com/maedana/ar_mailer/raw/master/README.rdoc

8. サーバ起動
--------------------------------------------------------------------------------
    $ ruby ./script/server -p [initial_settings.ymlで指定したSKIP起動ポート] -e production

9. 初期管理者ユーザの作成＆利用開始
--------------------------------------------------------------------------------
    7. で表示されたURLにブラウザでアクセスして、最初の運営者となるユーザを登録してください。


================================================================================
* SKIPのユーザ追加
================================================================================
SKIPを起動した直後は利用可能ユーザが存在していません。
管理画面から、利用可能ユーザの追加を行う必要があります。
管理画面には、[SKIPセットアップの9.]で作成した初期管理者ユーザでログインするとアクセスできます。
（上部メニューの[システムの管理]をクリック）

1. 運営者でログインする（はじめての場合セットアップ時に作成したユーザが運営者です）
--------------------------------------------------------------------------------

2. 利用可能ユーザの登録
--------------------------------------------------------------------------------
>> 一人ずつ登録する場合
 - システムの管理 -> データ管理 -> ユーザ -> 新規ユーザの作成 から ユーザを作成する

>> CSVで一括登録する場合
 - システムの管理 -> データ管理 -> ユーザ -> ユーザのCSVアップロード から アップロードする

3. 利用開始のためのURLを利用可能ユーザに通知する
--------------------------------------------------------------------------------
 - システムの管理 -> データ管理 -> ユーザ にアクセスする
 - 一覧のステータス列の[利用開始待ちにする]というリンクをクリックする
 - 一覧のステータス列ので[利用開始待ち]の右側にある[確認]というリンクを右クリックしURLをコピーする
 - コピーしたサインアップのためのURLをユーザに連絡する
 - ※詳しくはSKIP利用マニュアルを参照して下さい。


================================================================================
* バッチ一覧
================================================================================
SKIPでは、以下のバッチ処理を行っています。必要に応じてcron等へ登録してください。

 - batch_make_popular_bookmarks.rb     ・・・人気のブックマーク集計
 - batch_make_site_counts.rb           ・・・SKIP統計情報
 - batch_make_user_readings.rb         ・・・新着通知情報の更新
 - batch_cleanup_tables.rb             ・・・DB内の不要データ削除
 - batch_make_ranking.rb               ・・・ランキング集計
 - batch_check_user_readings.rb        ・・・新着通知情報のうち古いデータを削除
 - batch_send_mails.rb                 ・・・メール送信
 - batch_send_cleaning_notification.rb ・・・ユーザのクリーニング通知
 - batch_make_cache.rb                 ・・・全文検索用キャッシュ生成
 - batch_delete_cache.rb               ・・・全文検索用キャッシュの不要データ削除
 - batch_close_questions.rb            ・・・質問掲載の強制クローズ

================================================================================
* ユニットテスト
================================================================================
SKIPでは、ユニットテストにRspecを利用しています。
利用するには、以下を実行してRspecのインストールを行なってください。

1. (未インストールならば)hyperestraierのruby用ライブラリのインストール
--------------------------------------------------------------------------------
    $ wget http://hyperestraier.sourceforge.net/hyperestraier-1.4.13.tar.gz
    $ tar zxvf hyperestraier-1.4.13.tar.gz
    $ sudo cp hyperestraier-1.4.13/rubypure/estraierpure.rb /path_to_ruby_home/lib/ruby/site_ruby/1.8

2. データベースの作成（mysqlが起動済みであること）
--------------------------------------------------------------------------------
    $ RAILS_ENV=test rake db:create
    $ RAILS_ENV=test rake db:migrate

3. rspecの実行
--------------------------------------------------------------------------------
    $ rake spec
このコマンドを発行するとユニットテストが実行されます。

================================================================================
* 謝辞
================================================================================
SKIPのダウンロードありがとうございます。
改善要望や不具合を発見したなどありましたら、SKIPユーザグループにてご報告ください。
  SKIPユーザグループ = https://www.youroom.in/r/openskip

* ライセンス  ・・・  GPL ver.3 (http://www.gnu.org/licenses/gpl.html)
* アイコン提供・・・  famfamfam.com (http://www.famfamfam.com/lab/icons/silk/)

================================================================================
=  お問い合わせは・・・ info@openskip.org                                      =
================================================================================
=  SKIP                                              http://www.openskip.org/  =
================================================================================
